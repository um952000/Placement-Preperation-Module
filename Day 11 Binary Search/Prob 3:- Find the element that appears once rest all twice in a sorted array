class Solution {
public:
    int singleNonDuplicate(vector<int>& arr) {
        
        int n=arr.size();

        if(n==1)
        return arr[0];

        if(arr[0]!=arr[1])
        return arr[0];

        if(arr[n-1]!=arr[n-2])
        return arr[n-1];

        int s=1;
        int e=n-2;

        while(s<=e){

            int mid=s+(e-s)/2;

             if(arr[mid]!=arr[mid-1] && arr[mid]!=arr[mid+1])
             return arr[mid];

             int i=mid;

             if((i % 2 == 0 && arr[i] == arr[i+1]) || (i%2 == 1 && arr[i] == arr[i-1]))
             s=mid+1;

             else if((i % 2 == 0 && arr[i] == arr[i-1]) || (i%2 == 1 && arr[i] == arr[i+1]))
             e=mid-1;
        }

        return -1;
    }
};
