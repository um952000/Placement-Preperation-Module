class Solution {
public:
    
    ListNode* hasCycle(ListNode *head) {
        
        if(head == NULL || head->next == NULL)
               return NULL;
        
        ListNode* slow=head;
        ListNode* fast=head;
        
        ListNode* temp = head;
        
        while(fast!=NULL && slow!=NULL){
   
            fast=fast->next;
            
            if(fast!= NULL)
                fast=fast->next;
            
            
            slow=slow->next;
            
            if(slow==fast)
                return slow;
        }
          return NULL;
    }
    
ListNode *detectCycle(ListNode *head) {
        
        ListNode* temp1 = hasCycle(head);
        
        ListNode* temp2=head;
        
        if(temp1!=NULL){

                while(temp1!=temp2){
                      temp1=temp1->next;
                      temp2=temp2->next;
                }
            
            return temp1;
        }
        else{
            
            return NULL;
        }
    
        
    }
};
